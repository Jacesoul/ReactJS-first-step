### Why ReactJS
- ReactJS는 UI를 interactive하게 만들어준다.
- ReactJS의 규칙중 하나는 HTML을 직접 작성하지 않는것이다. 그 대신 JavaScript와 ReactJS를 이용해서 element를 생성한다.
- ReactJS는 어플리케이션이 아주 interactive하도록 만들어주는 library이고 react-dom은 library 또는 package인데 모든 React element들을 HTML body에 둘수 있도록 해준다.
- ReactDOM.render()에서 render의 의미는 React element를 가지고 HTML로 만들어 배치한다는 것이다. 사용자에게 보여준다.
- 바닐라JS에서는 HTML을 먼저 만들고, 그걸 JavaScript로 가져와서 HTML을 수정하는 방식이였다. 
- ReactJS에서는 모든것이 JavaScript로써 시작한다. 유저에게 보여질 내용을 컨트롤할수 있다는 뜻이다.
- JSX는 JavaScript를 확장한 문법이다.
- Babel을 통해 JSX로 적은 코드를 브라우저가 이해할수있는 형태로 바꿔줘야한다.
- <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

### STATE
- state는 기본적으로 데이터가 저장되는 곳이다. 
- ReactJS는 이전에 렌더링되 컴포넌트는 어떤거였는지 확인하면서 다음에 렌더링될 컴포넌트는 어떤지를 본다. 그다음 그 둘중 다른부분만 파악한다. 오로지 바뀐 부분만 업데이트 해주면 된다. 그 말은 곧 굉장히 interactive한 어플을 만들수 있다는 뜻이다.

```javascript
const x = [1,2,3];
const [one, two, three] = x; 
```

-React.useState()은 배열하나를 주는데 그 배열의 첫번째 요소는 내가 담으려는 data값이고 두번째 요소는 이 data값을 바꿀때 사용할 modifier이다. 
- modifier함수는 값을 받아서 그 값으로 업데이트하라고 리랜더링을 일으킨다.
- state가 바뀌면 새로운 값을 가지고 React가 전체 컴포넌트를 re-rendering해준다.
- state를 바꾸는 2가지 방법이 있는데 첫번째 방법은 modifier를 이용해서 우리가 원하는 값을 넣어준다. 또 하나는 이전값을 이용해서 현재값을 계산하는 것이다.